"""Description of changes

Revision ID: 94e13a17aec6
Revises: 538cda0b42c2
Create Date: 2024-02-23 14:25:06.169899

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '94e13a17aec6'
down_revision = '538cda0b42c2'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('FISRequests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('FacultyId', sa.Integer(), nullable=True),
    sa.Column('AdminId', sa.Integer(), nullable=True),
    sa.Column('DateTime', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('Status', sa.String(length=50), nullable=True),
    sa.Column('Request', sa.String(), nullable=True),
    sa.Column('Identifier_Name', sa.String(), nullable=True),
    sa.Column('is_delete', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['AdminId'], ['FISAdmin.AdminId'], ),
    sa.ForeignKeyConstraint(['FacultyId'], ['FISFaculty.FacultyId'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('FISUser_Notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('FacultyId', sa.Integer(), nullable=True),
    sa.Column('AdminId', sa.Integer(), nullable=True),
    sa.Column('DateTime', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('Status', sa.String(length=50), nullable=True),
    sa.Column('Notification', sa.String(), nullable=True),
    sa.Column('is_delete', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['AdminId'], ['FISAdmin.AdminId'], ),
    sa.ForeignKeyConstraint(['FacultyId'], ['FISFaculty.FacultyId'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('RISworkflow_steps')
    op.drop_table('RISnotifications')
    op.drop_table('SASSNotifications')
    op.drop_table('SGECreatedElectionPosition')
    op.drop_table('SPSStudentClassSubjectGrade')
    op.drop_table('SGECandidates')
    op.drop_table('RIScopyright')
    op.drop_table('SASSChangeSubjects2')
    op.drop_table('SGEVotingReceipt')
    op.drop_table('SASSShiftingApplication')
    op.drop_table('APMSEducation')
    op.drop_table('SGEInsertDataQueues')
    op.drop_table('RISworkflow')
    op.drop_table('SASSGradeEntry2')
    op.drop_table('oauth2_code')
    op.drop_table('RISethics')
    op.drop_table('SASSManualEnrollment')
    op.drop_table('SGEGuidelines')
    op.drop_table('SASSTutorialRequest')
    op.drop_table('SGESavedPosition')
    op.drop_table('ESISModule')
    op.drop_table('SASSTutorialRequest2')
    op.drop_table('SASSCrossEnrollment')
    op.drop_table('APMSLike')
    op.drop_table('SASSAnnouncement')
    op.drop_table('SGEElectionWinners')
    op.drop_table('SGERatingsTracker')
    with op.batch_alter_table('APMSEmployment', schema=None) as batch_op:
        batch_op.drop_index('ix_APMSEmployment_DateHired')

    op.drop_table('APMSEmployment')
    op.drop_table('RISresearch_types_assigned')
    op.drop_table('RISClass')
    with op.batch_alter_table('RISnavigation_role', schema=None) as batch_op:
        batch_op.drop_index('ix_RISnavigation_role_id')

    op.drop_table('RISnavigation_role')
    op.drop_table('SPSClassGrade')
    op.drop_table('SPSClassSubject')
    op.drop_table('RISnavigation_class')
    op.drop_table('APMSAchievement')
    op.drop_table('RISresearch_defense')
    op.drop_table('SGEElectionAppeals')
    op.drop_table('SGECertificationsSigned2')
    op.drop_table('RISsections_course_assigned')
    op.drop_table('sassaddsubjects')
    with op.batch_alter_table('APMSJob', schema=None) as batch_op:
        batch_op.drop_index('ix_APMSJob_Name')

    op.drop_table('APMSJob')
    op.drop_table('APMSInterestedAlumnis')
    op.drop_table('SGEOrganizationMember')
    op.drop_table('SGEAnnouncement')
    op.drop_table('SGEEligibles')
    op.drop_table('ESISRoleAccess')
    op.drop_table('APMSEvent')
    op.drop_table('RISset_defense')
    op.drop_table('SGECoC')
    op.drop_table('SPSUniversityAdmin')
    op.drop_table('SGERules')
    op.drop_table('SPSStudentClassGrade')
    op.drop_table('SASSGradeEntry3')
    op.drop_table('ESISProjectTeam')
    op.drop_table('RISauthors')
    op.drop_table('SASSGradeEntry')
    op.drop_table('SASSCertification')
    op.drop_table('RISrole')
    op.drop_table('SGEStudentOrganization')
    op.drop_table('SGECreatedAdminSignatory')
    op.drop_table('SGEOrganizationOfficer')
    op.drop_table('SASSManualEnrollment2')
    op.drop_table('APMSNews')
    op.drop_table('APMSPost')
    op.drop_table('SASSCrossEnrollment2')
    op.drop_table('SGECode')
    op.drop_table('FISCommittee')
    op.drop_table('APMSComment')
    op.drop_table('SASSShiftingApplication2')
    op.drop_table('RateLimit')
    op.drop_table('SGEElection')
    op.drop_table('SGEVotingsTracker')
    op.drop_table('APMSNationalCertificationClassification')
    op.drop_table('SPSCourseGrade')
    op.drop_table('SGECertifications')
    op.drop_table('APMSCourseClassification')
    op.drop_table('SGEComelec')
    op.drop_table('SPSCurriculum')
    op.drop_table('SASSChangeSubjects')
    op.drop_table('SPSCourseEnrolled')
    op.drop_table('RISset_defense_class')
    op.drop_table('RIScomments')
    op.drop_table('APMSAnnouncement')
    op.drop_table('SPSMetadata')
    with op.batch_alter_table('oauth2_token', schema=None) as batch_op:
        batch_op.drop_index('ix_oauth2_token_refresh_token')

    op.drop_table('oauth2_token')
    op.drop_table('SASSOverloadApplication')
    op.drop_table('SPSLatestBatchSemester')
    op.drop_table('RISresearch_papers')
    op.drop_table('SASSPetitionRequest')
    op.drop_table('APMSUserInterestEvent')
    op.drop_table('ESISSpeaker')
    op.drop_table('SGECertificationsSigned')
    op.drop_table('SASSOverloadApplication2')
    with op.batch_alter_table('APMSClassification', schema=None) as batch_op:
        batch_op.drop_index('ix_APMSClassification_Code')
        batch_op.drop_index('ix_APMSClassification_Name')

    op.drop_table('APMSClassification')
    op.drop_table('SPSSystemAdmin')
    op.drop_table('SASSAddSubjects')
    op.drop_table('SPSClassSubjectGrade')
    op.drop_table('RISannouncements')
    op.drop_table('APMSDonation')
    with op.batch_alter_table('ESISAnnouncement', schema=None) as batch_op:
        batch_op.drop_index('ix_ESISAnnouncement_CallForSpeaker')
        batch_op.drop_index('ix_ESISAnnouncement_Created')
        batch_op.drop_index('ix_ESISAnnouncement_IsLive')
        batch_op.drop_index('ix_ESISAnnouncement_Updated')

    op.drop_table('ESISAnnouncement')
    with op.batch_alter_table('APMSUser', schema=None) as batch_op:
        batch_op.drop_index('ix_APMSUser_Email')
        batch_op.drop_index('ix_APMSUser_Role')
        batch_op.drop_index('ix_APMSUser_StudentNumber')
        batch_op.drop_index('ix_APMSUser_Sub')
        batch_op.drop_index('ix_APMSUser_Username')

    op.drop_table('APMSUser')
    op.drop_table('RISfull_manuscript')
    op.drop_table('SGEPartyList')
    op.drop_table('APMSJobClassification')
    op.drop_table('SASSPetitionRequest2')
    op.drop_table('RISuser_role')
    op.drop_table('SGEElectionAnalytics')
    op.drop_table('APMSFundraising')
    op.drop_table('RISsection_assigned_prof')
    with op.batch_alter_table('oauth2_client', schema=None) as batch_op:
        batch_op.drop_index('ix_oauth2_client_client_id')

    op.drop_table('oauth2_client')
    op.drop_table('SASSCertification2')
    op.drop_table('SPSClass')
    op.drop_table('RISworkflow_class')
    op.drop_table('APMSUploadHistory')
    op.drop_table('APMSNationalCertification')
    with op.batch_alter_table('ESISActivity', schema=None) as batch_op:
        batch_op.add_column(sa.Column('Speaker', sa.JSON(), nullable=False))
        batch_op.drop_index('ix_ESISActivity_IsArchived')
        batch_op.drop_index('ix_ESISActivity_ProjectId')
        batch_op.drop_column('IsArchived')

    with op.batch_alter_table('ESISEvaluation', schema=None) as batch_op:
        batch_op.drop_index('ix_ESISEvaluation_EvaluationType')
        batch_op.drop_column('EvaluationType')

    with op.batch_alter_table('ESISExtensionProgram', schema=None) as batch_op:
        batch_op.drop_index('ix_ESISExtensionProgram_IsArchived')
        batch_op.drop_column('IsArchived')

    with op.batch_alter_table('ESISItem', schema=None) as batch_op:
        batch_op.add_column(sa.Column('ProjectId', sa.Integer(), nullable=False))
        batch_op.drop_constraint('ESISItem_ActivityId_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'ESISProject', ['ProjectId'], ['ProjectId'], ondelete='CASCADE')
        batch_op.drop_column('Particulars')
        batch_op.drop_column('ActivityId')

    with op.batch_alter_table('ESISProject', schema=None) as batch_op:
        batch_op.drop_index('ix_ESISProject_EndDate')
        batch_op.drop_index('ix_ESISProject_IsArchived')
        batch_op.drop_index('ix_ESISProject_StartDate')
        batch_op.drop_constraint('ESISProject_ResearchId_fkey', type_='foreignkey')
        batch_op.drop_column('ResearchId')
        batch_op.drop_column('ResearchBased')
        batch_op.drop_column('IsArchived')

    with op.batch_alter_table('ESISRegistration', schema=None) as batch_op:
        batch_op.drop_index('ix_ESISRegistration_ProjectId')
        batch_op.drop_index('ix_ESISRegistration_RegistrationDate')
        batch_op.drop_index('ix_ESISRegistration_UserId')

    with op.batch_alter_table('ESISUser', schema=None) as batch_op:
        batch_op.drop_index('ix_ESISUser_RoleId')

    with op.batch_alter_table('FISAdmin', schema=None) as batch_op:
        batch_op.alter_column('Login_Attempt',
               existing_type=sa.NUMERIC(precision=12, scale=0),
               type_=sa.Integer(),
               existing_nullable=True,
               existing_server_default=sa.text('12'))

    with op.batch_alter_table('FISFaculty', schema=None) as batch_op:
        batch_op.alter_column('Login_Attempt',
               existing_type=sa.NUMERIC(precision=12, scale=0),
               type_=sa.Integer(),
               existing_nullable=True,
               existing_server_default=sa.text('12'))

    with op.batch_alter_table('FISFacultyRoles', schema=None) as batch_op:
        batch_op.create_foreign_key(None, 'FISFaculty', ['FacultyId'], ['FacultyId'])

    with op.batch_alter_table('FISSystemAdmin_Log', schema=None) as batch_op:
        batch_op.alter_column('DateTime',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'Asia/Singapore'::text)"))

    with op.batch_alter_table('FISUser_Log', schema=None) as batch_op:
        batch_op.alter_column('DateTime',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'Asia/Singapore'::text)"))

    with op.batch_alter_table('RISUsers', schema=None) as batch_op:
        batch_op.drop_constraint('RISUsers_student_id_fkey', type_='foreignkey')
        batch_op.drop_column('modified_at')
        batch_op.drop_column('created_at')
        batch_op.drop_column('student_id')

    with op.batch_alter_table('RISfaculty_research_papers', schema=None) as batch_op:
        batch_op.alter_column('title',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.alter_column('content',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.alter_column('abstract',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.alter_column('file_path',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.alter_column('date_publish',
               existing_type=sa.DATE(),
               nullable=True)
        batch_op.alter_column('category',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.alter_column('publisher',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.drop_column('created_at')
        batch_op.drop_column('keywords')
        batch_op.drop_column('modified_at')
        batch_op.drop_column('status')

    with op.batch_alter_table('SCDSIncidentType', schema=None) as batch_op:
        batch_op.add_column(sa.Column('Excused', sa.String(length=512), nullable=False))
        batch_op.add_column(sa.Column('OneOffense', sa.String(length=512), nullable=False))
        batch_op.add_column(sa.Column('TwoOffense', sa.String(length=512), nullable=False))
        batch_op.add_column(sa.Column('ThreeOffense', sa.String(length=512), nullable=True))
        batch_op.add_column(sa.Column('FourOffense', sa.String(length=512), nullable=True))
        batch_op.alter_column('Name',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=512),
               existing_nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('SCDSIncidentType', schema=None) as batch_op:
        batch_op.alter_column('Name',
               existing_type=sa.String(length=512),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
        batch_op.drop_column('FourOffense')
        batch_op.drop_column('ThreeOffense')
        batch_op.drop_column('TwoOffense')
        batch_op.drop_column('OneOffense')
        batch_op.drop_column('Excused')

    with op.batch_alter_table('RISfaculty_research_papers', schema=None) as batch_op:
        batch_op.add_column(sa.Column('status', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('modified_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('keywords', sa.VARCHAR(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
        batch_op.alter_column('publisher',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.alter_column('category',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.alter_column('date_publish',
               existing_type=sa.DATE(),
               nullable=False)
        batch_op.alter_column('file_path',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.alter_column('abstract',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.alter_column('content',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.alter_column('title',
               existing_type=sa.VARCHAR(),
               nullable=False)

    with op.batch_alter_table('RISUsers', schema=None) as batch_op:
        batch_op.add_column(sa.Column('student_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('modified_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
        batch_op.create_foreign_key('RISUsers_student_id_fkey', 'SPSStudent', ['student_id'], ['StudentId'])

    with op.batch_alter_table('FISUser_Log', schema=None) as batch_op:
        batch_op.alter_column('DateTime',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'Asia/Singapore'::text)"))

    with op.batch_alter_table('FISSystemAdmin_Log', schema=None) as batch_op:
        batch_op.alter_column('DateTime',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'Asia/Singapore'::text)"))

    with op.batch_alter_table('FISFacultyRoles', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')

    with op.batch_alter_table('FISFaculty', schema=None) as batch_op:
        batch_op.alter_column('Login_Attempt',
               existing_type=sa.Integer(),
               type_=sa.NUMERIC(precision=12, scale=0),
               existing_nullable=True,
               existing_server_default=sa.text('12'))

    with op.batch_alter_table('FISAdmin', schema=None) as batch_op:
        batch_op.alter_column('Login_Attempt',
               existing_type=sa.Integer(),
               type_=sa.NUMERIC(precision=12, scale=0),
               existing_nullable=True,
               existing_server_default=sa.text('12'))

    with op.batch_alter_table('ESISUser', schema=None) as batch_op:
        batch_op.create_index('ix_ESISUser_RoleId', ['RoleId'], unique=False)

    with op.batch_alter_table('ESISRegistration', schema=None) as batch_op:
        batch_op.create_index('ix_ESISRegistration_UserId', ['UserId'], unique=False)
        batch_op.create_index('ix_ESISRegistration_RegistrationDate', ['RegistrationDate'], unique=False)
        batch_op.create_index('ix_ESISRegistration_ProjectId', ['ProjectId'], unique=False)

    with op.batch_alter_table('ESISProject', schema=None) as batch_op:
        batch_op.add_column(sa.Column('IsArchived', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('ResearchBased', sa.BOOLEAN(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('ResearchId', sa.VARCHAR(), autoincrement=False, nullable=True))
        batch_op.create_foreign_key('ESISProject_ResearchId_fkey', 'RISresearch_papers', ['ResearchId'], ['id'], ondelete='CASCADE')
        batch_op.create_index('ix_ESISProject_StartDate', ['StartDate'], unique=False)
        batch_op.create_index('ix_ESISProject_IsArchived', ['IsArchived'], unique=False)
        batch_op.create_index('ix_ESISProject_EndDate', ['EndDate'], unique=False)

    with op.batch_alter_table('ESISItem', schema=None) as batch_op:
        batch_op.add_column(sa.Column('ActivityId', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('Particulars', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('ESISItem_ActivityId_fkey', 'ESISActivity', ['ActivityId'], ['ActivityId'], ondelete='CASCADE')
        batch_op.drop_column('ProjectId')

    with op.batch_alter_table('ESISExtensionProgram', schema=None) as batch_op:
        batch_op.add_column(sa.Column('IsArchived', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.create_index('ix_ESISExtensionProgram_IsArchived', ['IsArchived'], unique=False)

    with op.batch_alter_table('ESISEvaluation', schema=None) as batch_op:
        batch_op.add_column(sa.Column('EvaluationType', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
        batch_op.create_index('ix_ESISEvaluation_EvaluationType', ['EvaluationType'], unique=False)

    with op.batch_alter_table('ESISActivity', schema=None) as batch_op:
        batch_op.add_column(sa.Column('IsArchived', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.create_index('ix_ESISActivity_ProjectId', ['ProjectId'], unique=False)
        batch_op.create_index('ix_ESISActivity_IsArchived', ['IsArchived'], unique=False)
        batch_op.drop_column('Speaker')

    op.create_table('APMSNationalCertification',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('Name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('IssuingBody', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Requirements', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('LinkReference', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='APMSNationalCertification_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('APMSUploadHistory',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('Type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Link', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('UserId', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['UserId'], ['APMSUser.id'], name='APMSUploadHistory_UserId_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='APMSUploadHistory_pkey')
    )
    op.create_table('RISworkflow_class',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('workflow_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('class_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['class_id'], ['RISClass.id'], name='RISworkflow_class_class_id_fkey'),
    sa.ForeignKeyConstraint(['workflow_id'], ['RISworkflow.id'], name='RISworkflow_class_workflow_id_fkey'),
    sa.PrimaryKeyConstraint('id', 'workflow_id', 'class_id', name='RISworkflow_class_pkey')
    )
    op.create_table('SPSClass',
    sa.Column('ClassId', sa.INTEGER(), server_default=sa.text('nextval(\'"SPSClass_ClassId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('MetadataId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('Section', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('IsGradeFinalized', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['MetadataId'], ['SPSMetadata.MetadataId'], name='SPSClass_MetadataId_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('ClassId', name='SPSClass_pkey'),
    sa.UniqueConstraint('MetadataId', 'Section', name='uq_metadata_section'),
    postgresql_ignore_search_path=False
    )
    op.create_table('SASSCertification2',
    sa.Column('CertificationId', sa.INTEGER(), server_default=sa.text('nextval(\'"SASSCertification_CertificationId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('StudentId', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('StudentNumber', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('Name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('CertificationType', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('RequestFormfilename', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('RequestFormdata', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('IdentificationCardfilename', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('IdentificationCarddata', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('IsRepresentative', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('AuthorizationLetterfilename', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('AuthorizationLetterdata', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('RepresentativeIdfilename', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('RepresentativeIddata', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('UserResponsible', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('Status', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('FacultyId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['StudentId'], ['SPSStudent.StudentId'], name='SASSCertification_StudentId_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('CertificationId', 'StudentId', name='SASSCertification_pkey')
    )
    op.create_table('oauth2_client',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('client_id', sa.VARCHAR(length=48), autoincrement=False, nullable=True),
    sa.Column('client_secret', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    sa.Column('client_id_issued_at', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('client_secret_expires_at', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('client_metadata', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['SPSSystemAdmin.SysAdminId'], name='oauth2_client_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='oauth2_client_pkey')
    )
    with op.batch_alter_table('oauth2_client', schema=None) as batch_op:
        batch_op.create_index('ix_oauth2_client_client_id', ['client_id'], unique=False)

    op.create_table('RISsection_assigned_prof',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('class_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['class_id'], ['RISClass.id'], name='RISsection_assigned_prof_class_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['RISUsers.id'], name='RISsection_assigned_prof_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='RISsection_assigned_prof_pkey')
    )
    op.create_table('APMSFundraising',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('GoalAmount', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('TotalCollected', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('Fulfilled', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('DonorsCount', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['id'], ['APMSPost.id'], name='APMSFundraising_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='APMSFundraising_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('SGEElectionAnalytics',
    sa.Column('ElectionAnalyticsId', sa.INTEGER(), server_default=sa.text('nextval(\'"SGEElectionAnalytics_ElectionAnalyticsId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('ElectionId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('AbstainCount', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('VotesCount', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['ElectionId'], ['SGEElection.ElectionId'], name='SGEElectionAnalytics_ElectionId_fkey'),
    sa.PrimaryKeyConstraint('ElectionAnalyticsId', name='SGEElectionAnalytics_pkey')
    )
    op.create_table('RISuser_role',
    sa.Column('modified_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('users_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('role_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['RISrole.id'], name='RISuser_role_role_id_fkey'),
    sa.ForeignKeyConstraint(['users_id'], ['RISUsers.id'], name='RISuser_role_users_id_fkey'),
    sa.PrimaryKeyConstraint('users_id', 'role_id', name='RISuser_role_pkey')
    )
    op.create_table('SASSPetitionRequest2',
    sa.Column('PetitionId', sa.INTEGER(), server_default=sa.text('nextval(\'"SASSPetitionRequest_PetitionId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('StudentId', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('StudentNumber', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('Name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('SubjectCode', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('SubjectName', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('PetitionType', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('RequestReason', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('UserResponsible', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('Status', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['StudentId'], ['SPSStudent.StudentId'], name='SASSPetitionRequest_StudentId_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('PetitionId', 'StudentId', name='SASSPetitionRequest_pkey')
    )
    op.create_table('APMSJobClassification',
    sa.Column('JobId', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('ClassificationId', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['ClassificationId'], ['APMSClassification.id'], name='APMSJobClassification_ClassificationId_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['JobId'], ['APMSJob.id'], name='APMSJobClassification_JobId_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('JobId', 'ClassificationId', name='APMSJobClassification_pkey')
    )
    op.create_table('SGEPartyList',
    sa.Column('PartyListId', sa.INTEGER(), server_default=sa.text('nextval(\'"SGEPartyList_PartyListId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('ElectionId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('PartyListName', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Platforms', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('EmailAddress', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('CellphoneNumber', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Vision', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Mission', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('ImageAttachment', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('VideoAttachment', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['ElectionId'], ['SGEElection.ElectionId'], name='SGEPartyList_ElectionId_fkey'),
    sa.PrimaryKeyConstraint('PartyListId', name='SGEPartyList_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('RISfull_manuscript',
    sa.Column('modified_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('research_paper_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('content', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('keywords', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('file', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('abstract', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('workflow_step_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['research_paper_id'], ['RISresearch_papers.id'], name='RISfull_manuscript_research_paper_id_fkey'),
    sa.ForeignKeyConstraint(['workflow_step_id'], ['RISworkflow_steps.id'], name='RISfull_manuscript_workflow_step_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='RISfull_manuscript_pkey')
    )
    op.create_table('APMSUser',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('Role', sa.VARCHAR(), server_default=sa.text("'public'::character varying"), autoincrement=False, nullable=False),
    sa.Column('Sub', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('ResetCode', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('IsCompleted', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('ProfilePicture', sa.VARCHAR(), server_default=sa.text("'#'::character varying"), autoincrement=False, nullable=True),
    sa.Column('Username', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('FirstName', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('LastName', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('StudentNumber', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Birthdate', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('CivilStatus', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Gender', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Headline', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('MobileNumber', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('TelephoneNumber', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('IsInternational', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('Address', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Country', sa.VARCHAR(), server_default=sa.text("'philippines'::character varying"), autoincrement=False, nullable=True),
    sa.Column('Region', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('RegionCode', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('City', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('CityCode', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Barangay', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('BarangayCode', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('OriginIsInternational', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('OriginAddress', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('OriginCountry', sa.VARCHAR(), server_default=sa.text("'philippines'::character varying"), autoincrement=False, nullable=True),
    sa.Column('OriginRegion', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('OriginCity', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('OriginBarangay', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('OriginRegionCode', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('OriginCityCode', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('OriginBarangayCode', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('DateGraduated', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('BatchYear', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('PostGradAct', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.Column('PresentEmploymentStatus', sa.VARCHAR(), server_default=sa.text("'unanswered'::character varying"), autoincrement=False, nullable=True),
    sa.Column('UnemploymentReason', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.Column('CourseId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['CourseId'], ['SPSCourse.CourseId'], name='APMSUser_CourseId_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['CourseId'], ['SPSCourse.CourseId'], name='APMSUser_CourseId_fkey1', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='APMSUser_pkey'),
    postgresql_ignore_search_path=False
    )
    with op.batch_alter_table('APMSUser', schema=None) as batch_op:
        batch_op.create_index('ix_APMSUser_Username', ['Username'], unique=False)
        batch_op.create_index('ix_APMSUser_Sub', ['Sub'], unique=False)
        batch_op.create_index('ix_APMSUser_StudentNumber', ['StudentNumber'], unique=False)
        batch_op.create_index('ix_APMSUser_Role', ['Role'], unique=False)
        batch_op.create_index('ix_APMSUser_Email', ['Email'], unique=False)

    op.create_table('ESISAnnouncement',
    sa.Column('AnnouncementId', sa.INTEGER(), server_default=sa.text('nextval(\'"ESISAnnouncement_AnnouncementId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('Title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('Content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('CreatorId', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('IsLive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('Slug', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('Created', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('Updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('Recipient', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('ImageUrl', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ImageId', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ProjectId', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('CallForSpeaker', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['CreatorId'], ['ESISUser.UserId'], name='ESISAnnouncement_CreatorId_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['ProjectId'], ['ESISProject.ProjectId'], name='ESISAnnouncement_ProjectId_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('AnnouncementId', name='ESISAnnouncement_pkey'),
    postgresql_ignore_search_path=False
    )
    with op.batch_alter_table('ESISAnnouncement', schema=None) as batch_op:
        batch_op.create_index('ix_ESISAnnouncement_Updated', ['Updated'], unique=False)
        batch_op.create_index('ix_ESISAnnouncement_IsLive', ['IsLive'], unique=False)
        batch_op.create_index('ix_ESISAnnouncement_Created', ['Created'], unique=False)
        batch_op.create_index('ix_ESISAnnouncement_CallForSpeaker', ['CallForSpeaker'], unique=False)

    op.create_table('APMSDonation',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('UserId', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('ApproverId', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('FundraisingId', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('Comment', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ProofOfDonation', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('DonationAmount', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('approved_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['ApproverId'], ['APMSUser.id'], name='APMSDonation_ApproverId_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['FundraisingId'], ['APMSFundraising.id'], name='APMSDonation_FundraisingId_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['UserId'], ['APMSUser.id'], name='APMSDonation_UserId_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='APMSDonation_pkey')
    )
    op.create_table('RISannouncements',
    sa.Column('modified_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('user_role_target', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('announcement_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('content', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('other_details', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('image', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='RISannouncements_pkey')
    )
    op.create_table('SPSClassSubjectGrade',
    sa.Column('ClassSubjectGradeId', sa.INTEGER(), server_default=sa.text('nextval(\'"SPSClassSubjectGrade_ClassSubjectGradeId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('ClassSubjectId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('Grade', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Passed', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('Failed', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('Incomplete', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('Dropout', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['ClassSubjectId'], ['SPSClassSubject.ClassSubjectId'], name='SPSClassSubjectGrade_ClassSubjectId_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('ClassSubjectGradeId', name='SPSClassSubjectGrade_pkey'),
    sa.UniqueConstraint('ClassSubjectId', name='SPSClassSubjectGrade_ClassSubjectId_key')
    )
    op.create_table('SASSAddSubjects',
    sa.Column('AddSubjectId', sa.INTEGER(), server_default=sa.text('nextval(\'"SASSAddSubjects_AddSubjectId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('StudentId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('FacultyId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('FacultyRole', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('Subject', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('ServiceDetails', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('SenderName', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('SenderContactNo', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('PaymentFile', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('Status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('Remarks', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['FacultyId'], ['FISFaculty.FacultyId'], name='SASSAddSubjects_FacultyId_fkey'),
    sa.ForeignKeyConstraint(['StudentId'], ['SPSStudent.StudentId'], name='SASSAddSubjects_StudentId_fkey'),
    sa.PrimaryKeyConstraint('AddSubjectId', name='SASSAddSubjects_pkey')
    )
    op.create_table('SPSSystemAdmin',
    sa.Column('SysAdminId', sa.INTEGER(), server_default=sa.text('nextval(\'"SPSSystemAdmin_SysAdminId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('SysAdminNumber', sa.VARCHAR(length=30), autoincrement=False, nullable=True),
    sa.Column('FirstName', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('LastName', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('MiddleName', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('Email', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('Password', sa.VARCHAR(length=256), autoincrement=False, nullable=False),
    sa.Column('Gender', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('DateOfBirth', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('PlaceOfBirth', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('ResidentialAddress', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('MobileNumber', sa.VARCHAR(length=11), autoincrement=False, nullable=True),
    sa.Column('IsActive', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('SysAdminId', name='SPSSystemAdmin_pkey'),
    sa.UniqueConstraint('Email', name='SPSSystemAdmin_Email_key'),
    sa.UniqueConstraint('SysAdminNumber', name='SPSSystemAdmin_SysAdminNumber_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('APMSClassification',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('Name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('Code', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='APMSClassification_pkey'),
    postgresql_ignore_search_path=False
    )
    with op.batch_alter_table('APMSClassification', schema=None) as batch_op:
        batch_op.create_index('ix_APMSClassification_Name', ['Name'], unique=False)
        batch_op.create_index('ix_APMSClassification_Code', ['Code'], unique=False)

    op.create_table('SASSOverloadApplication2',
    sa.Column('OverloadId', sa.INTEGER(), server_default=sa.text('nextval(\'"SASSOverloadApplication_OverloadId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('StudentId', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('Name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('StudentNumber', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('ProgramCourse', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('Semester', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('SubjectsToAdd', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('Justification', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('Overloadfilename', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('Overloaddata', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('UserResponsible', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('Status', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['StudentId'], ['SPSStudent.StudentId'], name='SASSOverloadApplication_StudentId_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('OverloadId', 'StudentId', name='SASSOverloadApplication_pkey')
    )
    op.create_table('SGECertificationsSigned',
    sa.Column('CertificationsSignedId', sa.INTEGER(), server_default=sa.text('nextval(\'"SGECertificationsSigned_CertificationsSignedId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('CertificationId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('SignatoryStudentNumber', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('SignatoryPosition', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('SignatorySignature', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('SignatoryDate', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['CertificationId'], ['SGECertifications.CertificationId'], name='SGECertificationsSigned_CertificationId_fkey'),
    sa.ForeignKeyConstraint(['SignatoryStudentNumber'], ['SPSStudent.StudentNumber'], name='SGECertificationsSigned_SignatoryStudentNumber_fkey'),
    sa.PrimaryKeyConstraint('CertificationsSignedId', name='SGECertificationsSigned_pkey')
    )
    op.create_table('ESISSpeaker',
    sa.Column('SpeakerId', sa.INTEGER(), server_default=sa.text('nextval(\'"ESISSpeaker_SpeakerId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('ActivityId', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('AlumniId', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('FacultyId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['ActivityId'], ['ESISActivity.ActivityId'], name='ESISSpeaker_ActivityId_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['AlumniId'], ['APMSUser.id'], name='ESISSpeaker_AlumniId_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['FacultyId'], ['FISFaculty.FacultyId'], name='ESISSpeaker_FacultyId_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('SpeakerId', name='ESISSpeaker_pkey')
    )
    op.create_table('APMSUserInterestEvent',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('UserID', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('EventID', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('AnnouncementID', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['AnnouncementID'], ['ESISAnnouncement.AnnouncementId'], name='APMSUserInterestEvent_AnnouncementID_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['EventID'], ['APMSEvent.id'], name='APMSUserInterestEvent_EventID_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['UserID'], ['APMSUser.id'], name='APMSUserInterestEvent_UserID_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['id'], ['APMSPost.id'], name='APMSUserInterestEvent_id_fkey', ondelete='CASCADE')
    )
    op.create_table('SASSPetitionRequest',
    sa.Column('PetitionId', sa.INTEGER(), server_default=sa.text('nextval(\'"SASSPetitionRequest_PetitionId_seq1"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('StudentId', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('StudentNumber', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('FacultyId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('Name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('SubjectCode', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('SubjectName', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('PetitionType', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('RequestReason', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('UserResponsible', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('Status', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['FacultyId'], ['FISFaculty.FacultyId'], name='SASSPetitionRequest_FacultyId_fkey'),
    sa.ForeignKeyConstraint(['StudentId'], ['SPSStudent.StudentId'], name='SASSPetitionRequest_StudentId_fkey1', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('PetitionId', name='SASSPetitionRequest_pkey1'),
    sa.UniqueConstraint('PetitionId', 'StudentId', name='SASSPetitionRequest_PetitionId_StudentId_key')
    )
    op.create_table('RISresearch_papers',
    sa.Column('modified_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('research_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('submitted_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('file_path', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('research_adviser', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('workflow_step_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('extension', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['workflow_step_id'], ['RISworkflow_steps.id'], name='RISresearch_papers_workflow_step_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='RISresearch_papers_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('SPSLatestBatchSemester',
    sa.Column('LatestBatchSemesterId', sa.INTEGER(), server_default=sa.text('nextval(\'"SPSLatestBatchSemester_LatestBatchSemesterId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('Batch', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('Semester', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('IsEnrollmentStarted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('IsGradeFinalized', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('LatestBatchSemesterId', name='SPSLatestBatchSemester_pkey')
    )
    op.create_table('SASSOverloadApplication',
    sa.Column('OverloadId', sa.INTEGER(), server_default=sa.text('nextval(\'"SASSOverloadApplication_OverloadId_seq1"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('StudentId', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('FacultyId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('Name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('StudentNumber', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('ProgramCourse', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('Semester', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('SubjectsToAdd', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('Justification', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('Overloadfilename', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('Overloaddata', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('UserResponsible', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('Status', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['FacultyId'], ['FISFaculty.FacultyId'], name='SASSOverloadApplication_FacultyId_fkey'),
    sa.ForeignKeyConstraint(['StudentId'], ['SPSStudent.StudentId'], name='SASSOverloadApplication_StudentId_fkey1', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('OverloadId', name='SASSOverloadApplication_pkey1')
    )
    op.create_table('oauth2_token',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('client_id', sa.VARCHAR(length=48), autoincrement=False, nullable=True),
    sa.Column('token_type', sa.VARCHAR(length=40), autoincrement=False, nullable=True),
    sa.Column('access_token', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('refresh_token', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('scope', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('issued_at', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('access_token_revoked_at', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('refresh_token_revoked_at', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('expires_in', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['SPSStudent.StudentId'], name='oauth2_token_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='oauth2_token_pkey'),
    sa.UniqueConstraint('access_token', name='oauth2_token_access_token_key')
    )
    with op.batch_alter_table('oauth2_token', schema=None) as batch_op:
        batch_op.create_index('ix_oauth2_token_refresh_token', ['refresh_token'], unique=False)

    op.create_table('SPSMetadata',
    sa.Column('MetadataId', sa.INTEGER(), server_default=sa.text('nextval(\'"SPSMetadata_MetadataId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('CourseId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('Year', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('Semester', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('Batch', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['CourseId'], ['SPSCourse.CourseId'], name='SPSMetadata_CourseId_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('MetadataId', name='SPSMetadata_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('APMSAnnouncement',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id'], ['APMSPost.id'], name='APMSAnnouncement_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='APMSAnnouncement_pkey')
    )
    op.create_table('RIScomments',
    sa.Column('modified_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('text', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('research_paper_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['research_paper_id'], ['RISresearch_papers.id'], name='RIScomments_research_paper_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['RISUsers.id'], name='RIScomments_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='RIScomments_pkey')
    )
    op.create_table('RISset_defense_class',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('class_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('set_defense_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['class_id'], ['RISClass.id'], name='RISset_defense_class_class_id_fkey'),
    sa.ForeignKeyConstraint(['set_defense_id'], ['RISset_defense.id'], name='RISset_defense_class_set_defense_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='RISset_defense_class_pkey')
    )
    op.create_table('SPSCourseEnrolled',
    sa.Column('CourseId', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('StudentId', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('DateEnrolled', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('Status', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('CurriculumYear', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['CourseId'], ['SPSCourse.CourseId'], name='SPSCourseEnrolled_CourseId_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['StudentId'], ['SPSStudent.StudentId'], name='SPSCourseEnrolled_StudentId_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('CourseId', 'StudentId', name='SPSCourseEnrolled_pkey')
    )
    op.create_table('SASSChangeSubjects',
    sa.Column('ChangeSubjectId', sa.INTEGER(), server_default=sa.text('nextval(\'"SASSChangeSubjects_ChangeSubjectId_seq1"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('StudentId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('FacultyRole', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('FromSubject', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('ToSubject', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('ServiceDetails', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('SenderName', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('SenderContactNo', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('PaymentFile', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('Status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('FacultyId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['FacultyId'], ['FISFaculty.FacultyId'], name='sasschangesubjects_fisfaculty_fk', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['StudentId'], ['SPSStudent.StudentId'], name='SASSChangeSubjects_StudentId_fkey'),
    sa.PrimaryKeyConstraint('ChangeSubjectId', name='SASSChangeSubjects_pkey1')
    )
    op.create_table('SPSCurriculum',
    sa.Column('CurriculumId', sa.INTEGER(), server_default=sa.text('nextval(\'"SPSCurriculum_CurriculumId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('SubjectId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('MetadataId', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['MetadataId'], ['SPSMetadata.MetadataId'], name='SPSCurriculum_MetadataId_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['SubjectId'], ['SPSSubject.SubjectId'], name='SPSCurriculum_SubjectId_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('CurriculumId', name='SPSCurriculum_pkey')
    )
    op.create_table('SGEComelec',
    sa.Column('ComelecId', sa.INTEGER(), server_default=sa.text('nextval(\'"SGEComelec_ComelecId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('StudentNumber', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('ComelecPassword', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Position', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['StudentNumber'], ['SPSStudent.StudentNumber'], name='SGEComelec_StudentNumber_fkey'),
    sa.PrimaryKeyConstraint('ComelecId', name='SGEComelec_pkey'),
    sa.UniqueConstraint('StudentNumber', name='SGEComelec_StudentNumber_key')
    )
    op.create_table('APMSCourseClassification',
    sa.Column('CourseId', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('ClassificationId', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['ClassificationId'], ['APMSClassification.id'], name='APMSCourseClassification_ClassificationId_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['CourseId'], ['SPSCourse.CourseId'], name='APMSCourseClassification_CourseId_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['CourseId'], ['SPSCourse.CourseId'], name='APMSCourseClassification_CourseId_fkey1', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('CourseId', 'ClassificationId', name='APMSCourseClassification_pkey')
    )
    op.create_table('SGECertifications',
    sa.Column('CertificationId', sa.INTEGER(), server_default=sa.text('nextval(\'"SGECertifications_CertificationId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('Title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('ElectionId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('StudentNumber', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('Date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('AdminSignatoryQuantity', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('AssetId', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['ElectionId'], ['SGEElection.ElectionId'], name='SGECertifications_ElectionId_fkey'),
    sa.ForeignKeyConstraint(['StudentNumber'], ['SPSStudent.StudentNumber'], name='SGECertifications_StudentNumber_fkey'),
    sa.PrimaryKeyConstraint('CertificationId', name='SGECertifications_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('SPSCourseGrade',
    sa.Column('CourseGradeId', sa.INTEGER(), server_default=sa.text('nextval(\'"SPSCourseGrade_CourseGradeId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('CourseId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('Batch', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('Semester', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('Grade', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['CourseId'], ['SPSCourse.CourseId'], name='SPSCourseGrade_CourseId_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('CourseGradeId', 'Batch', 'Semester', name='SPSCourseGrade_pkey')
    )
    op.create_table('APMSNationalCertificationClassification',
    sa.Column('NationalCertificationId', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('ClassificationId', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['ClassificationId'], ['APMSClassification.id'], name='APMSNationalCertificationClassification_ClassificationId_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['NationalCertificationId'], ['APMSNationalCertification.id'], name='APMSNationalCertificationClassific_NationalCertificationId_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('NationalCertificationId', 'ClassificationId', name='APMSNationalCertificationClassification_pkey')
    )
    op.create_table('SGEVotingsTracker',
    sa.Column('VotingsTrackerId', sa.INTEGER(), server_default=sa.text('nextval(\'"SGEVotingsTracker_VotingsTrackerId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('VoterStudentNumber', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('VotedCandidateId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('CourseId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ElectionId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['ElectionId'], ['SGEElection.ElectionId'], name='SGEVotingsTracker_ElectionId_fkey'),
    sa.ForeignKeyConstraint(['VotedCandidateId'], ['SGECandidates.CandidateId'], name='SGEVotingsTracker_VotedCandidateId_fkey'),
    sa.ForeignKeyConstraint(['VoterStudentNumber'], ['SPSStudent.StudentNumber'], name='SGEVotingsTracker_VoterStudentNumber_fkey'),
    sa.PrimaryKeyConstraint('VotingsTrackerId', name='SGEVotingsTracker_pkey')
    )
    op.create_table('SGEElection',
    sa.Column('ElectionId', sa.INTEGER(), server_default=sa.text('nextval(\'"SGEElection_ElectionId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('ElectionName', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('StudentOrganizationId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ElectionStatus', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('SchoolYear', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Semester', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('CreatedBy', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('ElectionStart', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('ElectionEnd', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('CoCFilingStart', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('CoCFilingEnd', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('CampaignStart', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('CampaignEnd', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('VotingStart', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('VotingEnd', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('AppealStart', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('AppealEnd', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['CreatedBy'], ['SPSStudent.StudentNumber'], name='SGEElection_CreatedBy_fkey'),
    sa.ForeignKeyConstraint(['StudentOrganizationId'], ['SGEStudentOrganization.StudentOrganizationId'], name='SGEElection_StudentOrganizationId_fkey'),
    sa.PrimaryKeyConstraint('ElectionId', name='SGEElection_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('RateLimit',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"RateLimit_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('ip_address', sa.VARCHAR(length=45), autoincrement=False, nullable=False),
    sa.Column('request_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('last_request_timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('expiration_timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='RateLimit_pkey'),
    sa.UniqueConstraint('ip_address', name='RateLimit_ip_address_key')
    )
    op.create_table('SASSShiftingApplication2',
    sa.Column('ShiftingId', sa.INTEGER(), server_default=sa.text('nextval(\'"SASSShiftingApplication_ShiftingId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('StudentId', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('StudentNumber', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('Name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('CurrentProgram', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('ResidencyYear', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('IntendedProgram', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('Qualifications', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Shiftingfilename', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('Shiftingdata', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('UserResponsible', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('Status', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['StudentId'], ['SPSStudent.StudentId'], name='SASSShiftingApplication_StudentId_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('ShiftingId', 'StudentId', name='SASSShiftingApplication_pkey')
    )
    op.create_table('APMSComment',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('CommenterId', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('PostId', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('Comment', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('ESISPostId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['CommenterId'], ['APMSUser.id'], name='APMSComment_CommenterId_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['ESISPostId'], ['ESISAnnouncement.AnnouncementId'], name='APMSComment_ESISPostId_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['PostId'], ['APMSPost.id'], name='APMSComment_PostId_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='APMSComment_pkey')
    )
    op.create_table('FISCommittee',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"FISCommittee_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('FacultyId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('committee_name', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('role', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('is_delete', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['FacultyId'], ['FISFaculty.FacultyId'], name='FISCommittee_FacultyId_fkey'),
    sa.PrimaryKeyConstraint('id', name='FISCommittee_pkey')
    )
    op.create_table('SGECode',
    sa.Column('CodeId', sa.INTEGER(), server_default=sa.text('nextval(\'"SGECode_CodeId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('StudentNumber', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('CodeValue', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('CodeType', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('CodeExpirationDate', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['StudentNumber'], ['SPSStudent.StudentNumber'], name='SGECode_StudentNumber_fkey'),
    sa.PrimaryKeyConstraint('CodeId', name='SGECode_pkey')
    )
    op.create_table('SASSCrossEnrollment2',
    sa.Column('CrossEnrollmentId', sa.INTEGER(), server_default=sa.text('nextval(\'"SASSCrossEnrollment_CrossEnrollmentId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('StudentId', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('StudentNumber', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('Name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('SchoolforCrossEnrollment', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('TotalNumberofUnits', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('AuthorizedSubjectstoTake', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('ApplicationLetterfilename', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('ApplicationLetterdata', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('PermitCrossEnrollfilename', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('PermitCrossEnrolldata', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('UserResponsible', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('Status', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['StudentId'], ['SPSStudent.StudentId'], name='SASSCrossEnrollment_StudentId_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('CrossEnrollmentId', 'StudentId', name='SASSCrossEnrollment_pkey')
    )
    op.create_table('APMSPost',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('Title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('PostType', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('ImgLink', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('UploaderId', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('Public', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['UploaderId'], ['APMSUser.id'], name='APMSPost_UploaderId_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='APMSPost_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('APMSNews',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id'], ['APMSPost.id'], name='APMSNews_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='APMSNews_pkey')
    )
    op.create_table('SASSManualEnrollment2',
    sa.Column('ManualEnrollmentId', sa.INTEGER(), server_default=sa.text('nextval(\'"SASSManualEnrollment_ManualEnrollmentId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('StudentId', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('StudentNumber', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('Name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('EnrollmentType', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('Reason', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('MeFilefilename', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('MeFiledata', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('UserResponsible', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('Status', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['StudentId'], ['SPSStudent.StudentId'], name='SASSManualEnrollment_StudentId_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('ManualEnrollmentId', 'StudentId', name='SASSManualEnrollment_pkey')
    )
    op.create_table('SGEOrganizationOfficer',
    sa.Column('OrganizationOfficerId', sa.INTEGER(), server_default=sa.text('nextval(\'"SGEOrganizationOfficer_OrganizationOfficerId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('StudentOrganizationId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('StudentNumber', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('OfficerPassword', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Image', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Position', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['StudentNumber'], ['SPSStudent.StudentNumber'], name='SGEOrganizationOfficer_StudentNumber_fkey'),
    sa.ForeignKeyConstraint(['StudentOrganizationId'], ['SGEStudentOrganization.StudentOrganizationId'], name='SGEOrganizationOfficer_StudentOrganizationId_fkey'),
    sa.PrimaryKeyConstraint('OrganizationOfficerId', name='SGEOrganizationOfficer_pkey'),
    sa.UniqueConstraint('StudentNumber', name='SGEOrganizationOfficer_StudentNumber_key')
    )
    op.create_table('SGECreatedAdminSignatory',
    sa.Column('CreatedAdminSignatoryId', sa.INTEGER(), server_default=sa.text('nextval(\'"SGECreatedAdminSignatory_CreatedAdminSignatoryId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('CertificationId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('SignatoryName', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('SignatoryPosition', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['CertificationId'], ['SGECertifications.CertificationId'], name='SGECreatedAdminSignatory_CertificationId_fkey'),
    sa.PrimaryKeyConstraint('CreatedAdminSignatoryId', name='SGECreatedAdminSignatory_pkey')
    )
    op.create_table('SGEStudentOrganization',
    sa.Column('StudentOrganizationId', sa.INTEGER(), server_default=sa.text('nextval(\'"SGEStudentOrganization_StudentOrganizationId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('OrganizationLogo', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('OrganizationName', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('OrganizationMemberRequirements', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('AdviserImage', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('AdviserName', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Vision', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Mission', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('StudentOrganizationId', name='SGEStudentOrganization_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('RISrole',
    sa.Column('modified_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('role_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='RISrole_pkey')
    )
    op.create_table('SASSCertification',
    sa.Column('CertificationId', sa.INTEGER(), server_default=sa.text('nextval(\'"SASSCertification_CertificationId_seq1"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('StudentId', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('FacultyId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('StudentNumber', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('Name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('CertificationType', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('RequestFormfilename', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('RequestFormdata', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('IdentificationCardfilename', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('IdentificationCarddata', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('IsRepresentative', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('AuthorizationLetterfilename', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('AuthorizationLetterdata', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('RepresentativeIdfilename', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('RepresentativeIddata', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('UserResponsible', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('Status', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['FacultyId'], ['FISFaculty.FacultyId'], name='SASSCertification_FacultyId_fkey'),
    sa.ForeignKeyConstraint(['StudentId'], ['SPSStudent.StudentId'], name='SASSCertification_StudentId_fkey1', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('CertificationId', name='SASSCertification_pkey1'),
    sa.UniqueConstraint('CertificationId', 'StudentId', name='SASSCertification_CertificationId_StudentId_key')
    )
    op.create_table('SASSGradeEntry',
    sa.Column('GradeEntryId', sa.INTEGER(), server_default=sa.text('nextval(\'"SASSGradeEntry_GradeEntryId_seq2"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('StudentId', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('StudentNumber', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('Name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('ApplicationType', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('CompletionFormfilename', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('CompletionFormdata', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('ClassRecordfilename', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('ClassRecorddata', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('Affidavitfilename', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('Affidavitdata', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('UserResponsible', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('Status', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('FacultyId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['FacultyId'], ['FISFaculty.FacultyId'], name='sassgradeentry_fisfaculty_fk', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['StudentId'], ['SPSStudent.StudentId'], name='SASSGradeEntry_StudentId_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('GradeEntryId', name='SASSGradeEntry_pkey2')
    )
    op.create_table('RISauthors',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('research_paper_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['research_paper_id'], ['RISresearch_papers.id'], name='RISauthors_research_paper_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['RISUsers.id'], name='RISauthors_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='RISauthors_pkey')
    )
    op.create_table('ESISProjectTeam',
    sa.Column('ProjectId', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('FacultyId', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['FacultyId'], ['FISFaculty.FacultyId'], name='ESISProjectTeam_FacultyId_fkey'),
    sa.ForeignKeyConstraint(['ProjectId'], ['ESISProject.ProjectId'], name='ESISProjectTeam_ProjectId_fkey'),
    sa.PrimaryKeyConstraint('ProjectId', 'FacultyId', name='ESISProjectTeam_pkey')
    )
    op.create_table('SASSGradeEntry3',
    sa.Column('GradeEntryId', sa.INTEGER(), server_default=sa.text('nextval(\'"SASSGradeEntry_GradeEntryId_seq1"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('StudentId', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('StudentNumber', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('Name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('ApplicationType', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('CompletionFormfilename', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('CompletionFormdata', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('ClassRecordfilename', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('ClassRecorddata', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('Affidavitfilename', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('Affidavitdata', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('UserResponsible', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('Status', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('FacultyId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['FacultyId'], ['FISFaculty.FacultyId'], name='sassgradeentry_fisfaculty_fk', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['StudentId'], ['SPSStudent.StudentId'], name='SASSGradeEntry_StudentId_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('GradeEntryId', name='SASSGradeEntry_pkey1')
    )
    op.create_table('SPSStudentClassGrade',
    sa.Column('StudentId', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('ClassId', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('Grade', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Lister', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['ClassId'], ['SPSClass.ClassId'], name='SPSStudentClassGrade_ClassId_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['StudentId'], ['SPSStudent.StudentId'], name='SPSStudentClassGrade_StudentId_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('StudentId', 'ClassId', name='SPSStudentClassGrade_pkey')
    )
    op.create_table('SGERules',
    sa.Column('RuleId', sa.INTEGER(), server_default=sa.text('nextval(\'"SGERules_RuleId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('RuleTitle', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('RuleBody', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('RuleId', name='SGERules_pkey')
    )
    op.create_table('SPSUniversityAdmin',
    sa.Column('UnivAdminId', sa.INTEGER(), server_default=sa.text('nextval(\'"SPSUniversityAdmin_UnivAdminId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('UnivAdminNumber', sa.VARCHAR(length=30), autoincrement=False, nullable=True),
    sa.Column('FirstName', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('LastName', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('MiddleName', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('Email', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('Password', sa.VARCHAR(length=256), autoincrement=False, nullable=False),
    sa.Column('Gender', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('DateOfBirth', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('PlaceOfBirth', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('ResidentialAddress', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('MobileNumber', sa.VARCHAR(length=11), autoincrement=False, nullable=True),
    sa.Column('IsActive', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('UnivAdminId', name='SPSUniversityAdmin_pkey'),
    sa.UniqueConstraint('Email', name='SPSUniversityAdmin_Email_key'),
    sa.UniqueConstraint('UnivAdminNumber', name='SPSUniversityAdmin_UnivAdminNumber_key')
    )
    op.create_table('SGECoC',
    sa.Column('CoCId', sa.INTEGER(), server_default=sa.text('nextval(\'"SGECoC_CoCId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('ElectionId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('StudentNumber', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('VerificationCode', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Motto', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Platform', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('PoliticalAffiliation', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('PartyListId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('SelectedPositionName', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('DisplayPhoto', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('CertificationOfGrades', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['ElectionId'], ['SGEElection.ElectionId'], name='SGECoC_ElectionId_fkey'),
    sa.ForeignKeyConstraint(['PartyListId'], ['SGEPartyList.PartyListId'], name='SGECoC_PartyListId_fkey'),
    sa.ForeignKeyConstraint(['StudentNumber'], ['SPSStudent.StudentNumber'], name='SGECoC_StudentNumber_fkey'),
    sa.PrimaryKeyConstraint('CoCId', name='SGECoC_pkey')
    )
    op.create_table('RISset_defense',
    sa.Column('modified_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('research_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('defense_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('time', postgresql.TIME(), autoincrement=False, nullable=False),
    sa.Column('class_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['class_id'], ['RISClass.id'], name='RISset_defense_class_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='RISset_defense_pkey')
    )
    op.create_table('APMSEvent',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('ContentDate', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('EndDate', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('InterestedCount', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['id'], ['APMSPost.id'], name='APMSEvent_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='APMSEvent_pkey')
    )
    op.create_table('ESISRoleAccess',
    sa.Column('RoleId', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('ModuleId', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['ModuleId'], ['ESISModule.ModuleId'], name='ESISRoleAccess_ModuleId_fkey'),
    sa.ForeignKeyConstraint(['RoleId'], ['ESISRole.RoleId'], name='ESISRoleAccess_RoleId_fkey'),
    sa.PrimaryKeyConstraint('RoleId', 'ModuleId', name='ESISRoleAccess_pkey')
    )
    op.create_table('SGEEligibles',
    sa.Column('EligibleId', sa.INTEGER(), server_default=sa.text('nextval(\'"SGEEligibles_EligibleId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('StudentNumber', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('ElectionId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('HasVotedOrAbstained', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('VotingPassword', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['ElectionId'], ['SGEElection.ElectionId'], name='SGEEligibles_ElectionId_fkey'),
    sa.ForeignKeyConstraint(['StudentNumber'], ['SPSStudent.StudentNumber'], name='SGEEligibles_StudentNumber_fkey'),
    sa.PrimaryKeyConstraint('EligibleId', name='SGEEligibles_pkey')
    )
    op.create_table('SGEAnnouncement',
    sa.Column('AnnouncementId', sa.INTEGER(), server_default=sa.text('nextval(\'"SGEAnnouncement_AnnouncementId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('AnnouncementType', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('AnnouncementTitle', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('AnnouncementBody', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('AttachmentType', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('AttachmentImage', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('AnnouncementId', name='SGEAnnouncement_pkey')
    )
    op.create_table('SGEOrganizationMember',
    sa.Column('OrganizationMemberId', sa.INTEGER(), server_default=sa.text('nextval(\'"SGEOrganizationMember_OrganizationMemberId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('StudentOrganizationId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('StudentNumber', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['StudentNumber'], ['SPSStudent.StudentNumber'], name='SGEOrganizationMember_StudentNumber_fkey'),
    sa.ForeignKeyConstraint(['StudentOrganizationId'], ['SGEStudentOrganization.StudentOrganizationId'], name='SGEOrganizationMember_StudentOrganizationId_fkey'),
    sa.PrimaryKeyConstraint('OrganizationMemberId', name='SGEOrganizationMember_pkey'),
    sa.UniqueConstraint('StudentNumber', name='SGEOrganizationMember_StudentNumber_key')
    )
    op.create_table('APMSInterestedAlumnis',
    sa.Column('AnnouncementID', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('AlumniID', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['AlumniID'], ['APMSUser.id'], name='InterestedAlumnis_AlumniID_fkey'),
    sa.ForeignKeyConstraint(['AnnouncementID'], ['ESISAnnouncement.AnnouncementId'], name='InterestedAlumnis_AnnouncementID_fkey')
    )
    op.create_table('APMSJob',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('Name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='APMSJob_pkey'),
    postgresql_ignore_search_path=False
    )
    with op.batch_alter_table('APMSJob', schema=None) as batch_op:
        batch_op.create_index('ix_APMSJob_Name', ['Name'], unique=False)

    op.create_table('sassaddsubjects',
    sa.Column('AddSubjectId', sa.INTEGER(), server_default=sa.text('nextval(\'"sassaddsubjects_AddSubjectId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('StudentId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('FacultyRole', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('Subject', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('ServiceDetails', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('SenderName', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('SenderContactNo', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('PaymentFile', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('Status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('Remarks', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('FacultyId', sa.INTEGER(), autoincrement=False, nullable=True)
    )
    op.create_table('RISsections_course_assigned',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('class_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('research_type_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['class_id'], ['RISClass.id'], name='RISsections_course_assigned_class_id_fkey'),
    sa.ForeignKeyConstraint(['research_type_id'], ['RISresearch_types_assigned.id'], name='RISsections_course_assigned_research_type_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='RISsections_course_assigned_pkey')
    )
    op.create_table('SGECertificationsSigned2',
    sa.Column('CertificationsSignedId', sa.INTEGER(), server_default=sa.text('nextval(\'"SGECertificationsSigned2_CertificationsSignedId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('CertificationTitle', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('DateUploaded', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('FileURL', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('CertificationsSignedId', name='SGECertificationsSigned2_pkey')
    )
    op.create_table('SGEElectionAppeals',
    sa.Column('ElectionAppealsId', sa.INTEGER(), server_default=sa.text('nextval(\'"SGEElectionAppeals_ElectionAppealsId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('StudentNumber', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('AppealDetails', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('AppealEmailSubject', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('AppealResponse', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('AppealStatus', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('AttachmentAssetId', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['StudentNumber'], ['SPSStudent.StudentNumber'], name='SGEElectionAppeals_StudentNumber_fkey'),
    sa.PrimaryKeyConstraint('ElectionAppealsId', name='SGEElectionAppeals_pkey')
    )
    op.create_table('RISresearch_defense',
    sa.Column('modified_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('research_paper_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('time', postgresql.TIME(), autoincrement=False, nullable=False),
    sa.Column('workflow_step_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['research_paper_id'], ['RISresearch_papers.id'], name='RISresearch_defense_research_paper_id_fkey'),
    sa.ForeignKeyConstraint(['workflow_step_id'], ['RISworkflow_steps.id'], name='RISresearch_defense_workflow_step_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='RISresearch_defense_pkey')
    )
    op.create_table('APMSAchievement',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('UserId', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('NationalCertificationId', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('TypeOfAchievement', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('DateOfAttainment', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('Description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Story', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('LinkReference', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Editable', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('ExtensionID', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['ExtensionID'], ['ESISActivity.ActivityId'], name='fk_ESISActivity_ActivityId'),
    sa.ForeignKeyConstraint(['NationalCertificationId'], ['APMSNationalCertification.id'], name='APMSAchievement_NationalCertificationId_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['UserId'], ['APMSUser.id'], name='APMSAchievement_UserId_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='APMSAchievement_pkey')
    )
    op.create_table('RISnavigation_class',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('navigation_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('class_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['class_id'], ['RISClass.id'], name='RISnavigation_class_class_id_fkey'),
    sa.ForeignKeyConstraint(['navigation_id'], ['RISnavigation_role.id'], name='RISnavigation_class_navigation_id_fkey'),
    sa.PrimaryKeyConstraint('id', 'navigation_id', 'class_id', name='RISnavigation_class_pkey')
    )
    op.create_table('SPSClassSubject',
    sa.Column('ClassSubjectId', sa.INTEGER(), server_default=sa.text('nextval(\'"SPSClassSubject_ClassSubjectId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('ClassId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('SubjectId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('FacultyId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('Schedule', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['ClassId'], ['SPSClass.ClassId'], name='SPSClassSubject_ClassId_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['FacultyId'], ['FISFaculty.FacultyId'], name='SPSClassSubject_FacultyId_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['SubjectId'], ['SPSSubject.SubjectId'], name='SPSClassSubject_SubjectId_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('ClassSubjectId', name='SPSClassSubject_pkey'),
    sa.UniqueConstraint('ClassId', 'SubjectId', 'FacultyId', name='_unique_class_subject_teacher'),
    postgresql_ignore_search_path=False
    )
    op.create_table('SPSClassGrade',
    sa.Column('ClassGradeId', sa.INTEGER(), server_default=sa.text('nextval(\'"SPSClassGrade_ClassGradeId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('ClassId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('DeansLister', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('PresidentsLister', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('Grade', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['ClassId'], ['SPSClass.ClassId'], name='SPSClassGrade_ClassId_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('ClassGradeId', name='SPSClassGrade_pkey'),
    sa.UniqueConstraint('ClassId', name='SPSClassGrade_ClassId_key')
    )
    op.create_table('RISnavigation_role',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('role', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('has_submitted_proposal', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('has_pre_oral_defense_date', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('has_submitted_ethics_protocol', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('has_submitted_full_manuscript', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('has_set_final_defense_date', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('has_submitted_copyright', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='RISnavigation_role_pkey')
    )
    with op.batch_alter_table('RISnavigation_role', schema=None) as batch_op:
        batch_op.create_index('ix_RISnavigation_role_id', ['id'], unique=False)

    op.create_table('RISClass',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('section', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('course', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='RISClass_pkey')
    )
    op.create_table('RISresearch_types_assigned',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('research_type_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['RISUsers.id'], name='RISresearch_types_assigned_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='RISresearch_types_assigned_pkey')
    )
    op.create_table('APMSEmployment',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('UserId', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('AlignedWithAcademicProgram', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('JobId', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('CompanyName', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('DateHired', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('DateEnd', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('FindingJobMeans', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('GrossMonthlyIncome', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('EmploymentContract', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('JobPosition', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('EmployerType', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('IsInternational', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('Address', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Country', sa.VARCHAR(), server_default=sa.text("'philippines'::character varying"), autoincrement=False, nullable=True),
    sa.Column('Region', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('City', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('RegionCode', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('CityCode', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['JobId'], ['APMSJob.id'], name='APMSEmployment_JobId_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['UserId'], ['APMSUser.id'], name='APMSEmployment_UserId_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='APMSEmployment_pkey')
    )
    with op.batch_alter_table('APMSEmployment', schema=None) as batch_op:
        batch_op.create_index('ix_APMSEmployment_DateHired', ['DateHired'], unique=False)

    op.create_table('SGERatingsTracker',
    sa.Column('RatingsTrackerId', sa.INTEGER(), server_default=sa.text('nextval(\'"SGERatingsTracker_RatingsTrackerId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('StudentNumber', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('ElectionId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['ElectionId'], ['SGEElection.ElectionId'], name='SGERatingsTracker_ElectionId_fkey'),
    sa.ForeignKeyConstraint(['StudentNumber'], ['SPSStudent.StudentNumber'], name='SGERatingsTracker_StudentNumber_fkey'),
    sa.PrimaryKeyConstraint('RatingsTrackerId', name='SGERatingsTracker_pkey')
    )
    op.create_table('SGEElectionWinners',
    sa.Column('ElectionWinnersId', sa.INTEGER(), server_default=sa.text('nextval(\'"SGEElectionWinners_ElectionWinnersId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('ElectionId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('StudentNumber', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('SelectedPositionName', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Votes', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('IsTied', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['ElectionId'], ['SGEElection.ElectionId'], name='SGEElectionWinners_ElectionId_fkey'),
    sa.ForeignKeyConstraint(['StudentNumber'], ['SPSStudent.StudentNumber'], name='SGEElectionWinners_StudentNumber_fkey'),
    sa.PrimaryKeyConstraint('ElectionWinnersId', name='SGEElectionWinners_pkey')
    )
    op.create_table('SASSAnnouncement',
    sa.Column('AnnouncementId', sa.INTEGER(), server_default=sa.text('nextval(\'"SASSAnnouncement_AnnouncementId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('FacultyId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('SystemAdminId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('AnnouncementType', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('AnnouncementDetails', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('DatePosted', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('AnnouncementFile', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['FacultyId'], ['FISFaculty.FacultyId'], name='SASSAnnouncement_FacultyId_fkey'),
    sa.ForeignKeyConstraint(['SystemAdminId'], ['SPSSystemAdmin.SysAdminId'], name='SASSAnnouncement_SystemAdminId_fkey'),
    sa.PrimaryKeyConstraint('AnnouncementId', name='SASSAnnouncement_pkey')
    )
    op.create_table('APMSLike',
    sa.Column('LikerId', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('PostId', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('ESISPostId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['ESISPostId'], ['ESISAnnouncement.AnnouncementId'], name='APMSLike_ESISPostId_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['LikerId'], ['APMSUser.id'], name='APMSLike_LikerId_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['PostId'], ['APMSPost.id'], name='APMSLike_PostId_fkey', ondelete='CASCADE')
    )
    op.create_table('SASSCrossEnrollment',
    sa.Column('CrossEnrollmentId', sa.INTEGER(), server_default=sa.text('nextval(\'"SASSCrossEnrollment_CrossEnrollmentId_seq1"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('StudentId', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('StudentNumber', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('Name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('SchoolforCrossEnrollment', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('TotalNumberofUnits', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('AuthorizedSubjectstoTake', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('ApplicationLetterfilename', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('ApplicationLetterdata', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('PermitCrossEnrollfilename', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('PermitCrossEnrolldata', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('UserResponsible', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('Status', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('FacultyId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['FacultyId'], ['FISFaculty.FacultyId'], name='sasscrossenrollment_fisfaculty_fk', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['StudentId'], ['SPSStudent.StudentId'], name='SASSCrossEnrollment_StudentId_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('CrossEnrollmentId', name='SASSCrossEnrollment_pkey1')
    )
    op.create_table('SASSTutorialRequest2',
    sa.Column('TutorialId', sa.INTEGER(), server_default=sa.text('nextval(\'"SASSTutorialRequest_TutorialId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('StudentId', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('StudentNumber', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('Name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('SubjectCode', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('SubjectName', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('Tutorialfilename', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('Tutorialdata', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('UserResponsible', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('Status', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['StudentId'], ['SPSStudent.StudentId'], name='SASSTutorialRequest_StudentId_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('TutorialId', 'StudentId', name='SASSTutorialRequest_pkey')
    )
    op.create_table('ESISModule',
    sa.Column('ModuleId', sa.INTEGER(), server_default=sa.text('nextval(\'"ESISModule_ModuleId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('Name', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('Description', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('ModuleId', name='ESISModule_pkey')
    )
    op.create_table('SGESavedPosition',
    sa.Column('SavedPositionId', sa.INTEGER(), server_default=sa.text('nextval(\'"SGESavedPosition_SavedPositionId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('PositionName', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('SavedPositionId', name='SGESavedPosition_pkey')
    )
    op.create_table('SASSTutorialRequest',
    sa.Column('TutorialId', sa.INTEGER(), server_default=sa.text('nextval(\'"SASSTutorialRequest_TutorialId_seq1"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('StudentId', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('FacultyId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('StudentNumber', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('Name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('SubjectCode', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('SubjectName', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('Tutorialfilename', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('Tutorialdata', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('UserResponsible', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('Status', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['FacultyId'], ['FISFaculty.FacultyId'], name='SASSTutorialRequest_FacultyId_fkey'),
    sa.ForeignKeyConstraint(['StudentId'], ['SPSStudent.StudentId'], name='SASSTutorialRequest_StudentId_fkey1', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('TutorialId', name='SASSTutorialRequest_pkey1')
    )
    op.create_table('SGEGuidelines',
    sa.Column('GuideId', sa.INTEGER(), server_default=sa.text('nextval(\'"SGEGuidelines_GuideId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('GuidelineTitle', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('GuidelineBody', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('GuideId', name='SGEGuidelines_pkey')
    )
    op.create_table('SASSManualEnrollment',
    sa.Column('ManualEnrollmentId', sa.INTEGER(), server_default=sa.text('nextval(\'"SASSManualEnrollment_ManualEnrollmentId_seq1"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('StudentId', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('FacultyId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('StudentNumber', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('Name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('EnrollmentType', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('Reason', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('MeFilefilename', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('MeFiledata', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('UserResponsible', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('Status', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['FacultyId'], ['FISFaculty.FacultyId'], name='SASSManualEnrollment_FacultyId_fkey'),
    sa.ForeignKeyConstraint(['StudentId'], ['SPSStudent.StudentId'], name='SASSManualEnrollment_StudentId_fkey1', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('ManualEnrollmentId', name='SASSManualEnrollment_pkey1'),
    sa.UniqueConstraint('ManualEnrollmentId', 'StudentId', name='SASSManualEnrollment_ManualEnrollmentId_StudentId_key')
    )
    op.create_table('RISethics',
    sa.Column('modified_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('research_paper_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('letter_of_intent', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('urec_9', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('urec_10', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('urec_11', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('urec_12', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('certificate_of_validation', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('co_authorship', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('workflow_step_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['research_paper_id'], ['RISresearch_papers.id'], name='RISethics_research_paper_id_fkey'),
    sa.ForeignKeyConstraint(['workflow_step_id'], ['RISworkflow_steps.id'], name='RISethics_workflow_step_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='RISethics_pkey')
    )
    op.create_table('oauth2_code',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('code', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('client_id', sa.VARCHAR(length=48), autoincrement=False, nullable=True),
    sa.Column('redirect_uri', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('response_type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('scope', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('nonce', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('auth_time', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('code_challenge', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('code_challenge_method', sa.VARCHAR(length=48), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['SPSSystemAdmin.SysAdminId'], name='oauth2_code_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='oauth2_code_pkey'),
    sa.UniqueConstraint('code', name='oauth2_code_code_key')
    )
    op.create_table('SASSGradeEntry2',
    sa.Column('GradeEntryId', sa.INTEGER(), server_default=sa.text('nextval(\'"SASSGradeEntry_GradeEntryId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('StudentId', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('StudentNumber', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('Name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('ApplicationType', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('CompletionFormfilename', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('CompletionFormdata', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('ClassRecordfilename', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('ClassRecorddata', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('Affidavitfilename', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('Affidavitdata', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('UserResponsible', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('Status', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['StudentId'], ['SPSStudent.StudentId'], name='SASSGradeEntry_StudentId_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('GradeEntryId', 'StudentId', name='SASSGradeEntry_pkey')
    )
    op.create_table('RISworkflow',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['RISUsers.id'], name='RISworkflow_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='RISworkflow_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('SGEInsertDataQueues',
    sa.Column('QueueId', sa.INTEGER(), server_default=sa.text('nextval(\'"SGEInsertDataQueues_QueueId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('QueueName', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('ToEmailTotal', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('EmailSent', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('EmailFailed', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('Status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('QueueId', name='SGEInsertDataQueues_pkey')
    )
    op.create_table('APMSEducation',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('UserId', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('CourseId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('Level', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('SchoolName', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Story', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('IsInternational', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('Address', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Country', sa.VARCHAR(), server_default=sa.text("'philippines'::character varying"), autoincrement=False, nullable=True),
    sa.Column('Region', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('City', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('RegionCode', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('CityCode', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('DateStart', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('DateGraduated', sa.DATE(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['CourseId'], ['SPSCourse.CourseId'], name='APMSEducation_CourseId_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['CourseId'], ['SPSCourse.CourseId'], name='APMSEducation_CourseId_fkey1', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['UserId'], ['APMSUser.id'], name='APMSEducation_UserId_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='APMSEducation_pkey')
    )
    op.create_table('SASSShiftingApplication',
    sa.Column('ShiftingId', sa.INTEGER(), server_default=sa.text('nextval(\'"SASSShiftingApplication_ShiftingId_seq1"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('StudentId', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('FacultyId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('StudentNumber', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('Name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('CurrentProgram', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('ResidencyYear', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('IntendedProgram', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('Qualifications', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Shiftingfilename', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('Shiftingdata', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('UserResponsible', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('Status', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['FacultyId'], ['FISFaculty.FacultyId'], name='SASSShiftingApplication_FacultyId_fkey'),
    sa.ForeignKeyConstraint(['StudentId'], ['SPSStudent.StudentId'], name='SASSShiftingApplication_StudentId_fkey1', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('ShiftingId', name='SASSShiftingApplication_pkey1')
    )
    op.create_table('SGEVotingReceipt',
    sa.Column('VotingReceiptId', sa.INTEGER(), server_default=sa.text('nextval(\'"SGEVotingReceipt_VotingReceiptId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('ElectionId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('StudentNumber', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('ReceiptPDF', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['ElectionId'], ['SGEElection.ElectionId'], name='SGEVotingReceipt_ElectionId_fkey'),
    sa.ForeignKeyConstraint(['StudentNumber'], ['SPSStudent.StudentNumber'], name='SGEVotingReceipt_StudentNumber_fkey'),
    sa.PrimaryKeyConstraint('VotingReceiptId', name='SGEVotingReceipt_pkey')
    )
    op.create_table('SASSChangeSubjects2',
    sa.Column('ChangeSubjectId', sa.INTEGER(), server_default=sa.text('nextval(\'"SASSChangeSubjects_ChangeSubjectId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('StudentId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('FromSubject', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('ToSubject', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('ServiceDetails', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('SenderName', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('SenderContactNo', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('PaymentFile', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('Status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['StudentId'], ['SPSStudent.StudentId'], name='SASSChangeSubjects_StudentId_fkey'),
    sa.PrimaryKeyConstraint('ChangeSubjectId', name='SASSChangeSubjects_pkey')
    )
    op.create_table('RIScopyright',
    sa.Column('modified_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('research_paper_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('co_authorship', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('affidavit_co_ownership', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('joint_authorship', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('approval_sheet', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('receipt_payment', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('recordal_slip', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('acknowledgement_receipt', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('certificate_copyright', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('recordal_template', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('ureb_18', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('journal_publication', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('copyright_manuscript', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('workflow_step_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['research_paper_id'], ['RISresearch_papers.id'], name='RIScopyright_research_paper_id_fkey'),
    sa.ForeignKeyConstraint(['workflow_step_id'], ['RISworkflow_steps.id'], name='RIScopyright_workflow_step_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='RIScopyright_pkey')
    )
    op.create_table('SGECandidates',
    sa.Column('CandidateId', sa.INTEGER(), server_default=sa.text('nextval(\'"SGECandidates_CandidateId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('StudentNumber', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('ElectionId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('PartyListId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('SelectedPositionName', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('DisplayPhoto', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Votes', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('TimesAbstained', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('Rating', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('TimesRated', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('OneStar', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('TwoStar', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ThreeStar', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('FourStar', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('FiveStar', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['ElectionId'], ['SGEElection.ElectionId'], name='SGECandidates_ElectionId_fkey'),
    sa.ForeignKeyConstraint(['PartyListId'], ['SGEPartyList.PartyListId'], name='SGECandidates_PartyListId_fkey'),
    sa.ForeignKeyConstraint(['StudentNumber'], ['SPSStudent.StudentNumber'], name='SGECandidates_StudentNumber_fkey'),
    sa.PrimaryKeyConstraint('CandidateId', name='SGECandidates_pkey')
    )
    op.create_table('SPSStudentClassSubjectGrade',
    sa.Column('ClassSubjectId', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('StudentId', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('Grade', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('DateEnrolled', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('AcademicStatus', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['ClassSubjectId'], ['SPSClassSubject.ClassSubjectId'], name='SPSStudentClassSubjectGrade_ClassSubjectId_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['StudentId'], ['SPSStudent.StudentId'], name='SPSStudentClassSubjectGrade_StudentId_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('ClassSubjectId', 'StudentId', name='SPSStudentClassSubjectGrade_pkey')
    )
    op.create_table('SGECreatedElectionPosition',
    sa.Column('CreatedElectionPositionId', sa.INTEGER(), server_default=sa.text('nextval(\'"SGECreatedElectionPosition_CreatedElectionPositionId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('ElectionId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('PositionName', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('PositionQuantity', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['ElectionId'], ['SGEElection.ElectionId'], name='SGECreatedElectionPosition_ElectionId_fkey'),
    sa.PrimaryKeyConstraint('CreatedElectionPositionId', name='SGECreatedElectionPosition_pkey')
    )
    op.create_table('SASSNotifications',
    sa.Column('NotificationId', sa.INTEGER(), server_default=sa.text('nextval(\'"SASSNotifications_NotificationId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('StudentId', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('StudentNumber', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('ServiceType', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('UserResponsible', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('Status', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('Message', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['StudentId'], ['SPSStudent.StudentId'], name='SASSNotifications_StudentId_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('NotificationId', 'StudentId', name='SASSNotifications_pkey')
    )
    op.create_table('RISnotifications',
    sa.Column('modified_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('message', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('isRead', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['RISUsers.id'], name='RISnotifications_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='RISnotifications_pkey')
    )
    op.create_table('RISworkflow_steps',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('workflow_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['workflow_id'], ['RISworkflow.id'], name='RISworkflow_steps_workflow_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='RISworkflow_steps_pkey')
    )
    op.drop_table('FISUser_Notifications')
    op.drop_table('FISRequests')
    # ### end Alembic commands ###
